#ifndef VALIDATEVULNERABILITY_H_
#define VALIDATEVULNERABILITY_H_

#include <cstring>
#include <map>
#include <set>
#include <vector>

#include "../include/oasis.h"
#include "../include/validate.h"


class ValidateVulnerability : public Validate {
public:
  ValidateVulnerability(const bool allIntensityBinsCheck) :
    allIntensityBinsCheck_(allIntensityBinsCheck) {
      strcpy(fileDescription_, "Vulnerability");
  };
  ~ValidateVulnerability() {};

  void ReadVulnerabilityFile();
  void PrintMaximumDamageBinIndex();

protected:
  const bool allIntensityBinsCheck_;
  bool convertToBin_ = false;
  bool useIndexFile_ = false;
  Vulnerability v_;
  long long initialVulID_;
  int prevVulID_ = 0;

  int ScanLine();
  void ReadFirstVulnerabilityLine(OASIS_FLOAT &totalProbability);

private:
  int prevIntBinID_;
  int prevDamageBinID_ = 0;
  char prevLine_[4096];
  std::set<int> intensityBinIDs_;
  std::map<int, std::set<int> > vulIDToIntBinIDs_;
  int maxDamageBin_;

  inline void CheckVulnerabilityID();
  inline void CheckDamageBinID();
  inline void CheckProbability(const OASIS_FLOAT totalProbability);
  inline void CheckIntensityBinID();
  inline void StoreLine();
  inline void SetIntensityBinIDs();
  inline void CheckAllIntensityBinsPresent();
  virtual void WriteBinVulnerabilityFile() {};
  virtual void WriteIdxVulnerabilityFile() {};

};

#endif   // VALIDATEVULNERABILITY_H_
