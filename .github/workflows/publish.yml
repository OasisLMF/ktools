name: Ktools Release

on:
  # ONLY USE PUSH FOR TESTING --- delete this
  push:
  workflow_dispatch:
    inputs:

      build_branch:
        description: 'Branch of build script repo - https://github.com/OasisLMF/build'
        required: true

      release_tag:
        description: 'Release tag to publish ktools as'
        required: true

      prev_release_tag:
        description: 'The last release, used for generating the changelog'
        required: true

      pre_release:
        description: 'Mark release as pre-release'
        required: true

      auto_merge:
        description: 'Run Git flow, git_merge(source_branch -> master) and then git_merge(master -> develop)'
        required: true


env:
  MAIN_BRANCH: "test-master"
  DEVELOP_BRANCH: "test-develop"

  BUILD_WORKSPACE: ${{ github.workspace }}/oasis_build
  KTOOLS_WORKSPACE: ${{ github.workspace }}/ktools

  #BUILD_BRANCH: ${{ inputs.build_branch }}
  #RELEASE_TAG: ${{ inputs.release_tag }}
  #PREV_RELEASE_TAG: ${{ inputs.prev_release_tag }}
  #PRE_RELEASE: ${{ inputs.pre_release }}
  #AUTO_MERGE: ${{ inputs.auto_merge }}

# -- TESTING ONLY ----

  BUILD_BRANCH: 'master'
  RELEASE_TAG: 'v3.9.5rc1'
  PREV_RELEASE_TAG: 'v3.9.4'
  PRE_RELEASE: 'true'
  AUTO_MERGE: 'false'


  GIT_USERNAME: 'awsbuild'
  GIT_EMAIL: 'awsbuild@oasislmf.org'

jobs:
 # build:
 #   uses: ./.github/workflows/build.yml
 #   secrets: inherit
 #   with:
 #     create_ktools_builder: 'false'


# https://github.com/marketplace/actions/check-version-format-in-tag
  create_release:
    runs-on: ubuntu-latest
    #needs: build
    steps:

    # -- test version tags ----- #
    - name: Check tag is valid for release
      if: ${{ env.PRE_RELEASE == 'false'}}
      run: |
        echo ${{ env.RELEASE_TAG }} | grep -Eq  "^v(0|[1-9]*)\.(0|[1-9]*)\.(0|[1-9]*)$" && echo 'Passed' || exit 1

    - name: Check tag is valid for pre-release
      if: ${{ env.PRE_RELEASE == 'true'}}
      run: |
        echo ${{ env.RELEASE_TAG }} | grep -Eq  "^v(0|[1-9]*)\.(0|[1-9]*)\.(0|[1-9]*)rc([1-9]*)$" && echo 'Passed' || exit 1

    # -- test can merge ----- #
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: env.KTOOLS_WORKSPACE

    - name: Setup github user
      run: |
        git config --global user.email ${{ env.GIT_EMAIL }}
        git config --global user.name ${{ env.GIT_USERNAME }}
        git config --global pull.ff only

    - name: Check for merge conflicts and tag
      working-directory: ${{ env.KTOOLS_WORKSPACE }}
      env:
        GITHUB_TOKEN: ${{ secrets.AWSBUILD_GIT_TOKEN }}
      #if: ${{ env.AUTO_MERGE == 'true'}}
      run: |
        #git pull origin ${{ env.MAIN_BRANCH }} --allow-unrelated-histories
        git checkout ${{ env.MAIN_BRANCH }}
        git merge ${{ github.ref_name }} --no-ff --no-commit
        git merge --abort
        git checkout ${{ github.ref_name }}
        git tag ${{ env.RELEASE_TAG }}

    # --- Create release logs/notes ----- #
    - name: clone build repository
      uses: actions/checkout@v3
      with:
        repository: OasisLMF/build
        fetch-depth: 1
        ref: ${{ env.BUILD_BRANCH }}
        path: ${{ env.BUILD_WORKSPACE }}

    - name: Changelog create image
      working-directory: ${{ env.BUILD_WORKSPACE }}
      run: |
        docker build -f docker/Dockerfile.release-notes -t release-builder .

    - name: Create changelog
      env:
        GITHUB_TOKEN: ${{ secrets.AWSBUILD_GIT_TOKEN }}
      run: |
        docker run -v ${{ env.KTOOLS_WORKSPACE }}:/tmp release-builder build-changelog \
          --repo ktools \
          --from-tag ${{ env.PREV_RELEASE_TAG }} \
          --to-tag ${{ env.RELEASE_TAG }} \
          --github-token ${{ secrets.AWSBUILD_GIT_TOKEN }} \
          --local-repo-path ./ \
         #--apply-milestone
          --output-path ./CHANGELOG.rst

        git add ./CHANGELOG.rst
        git commit -m 'Update changelog'


    - name: Create Release notes
      run: |
        docker run -v ${{ env.KTOOLS_WORKSPACE }}:/tmp release-builder build-release \
          --repo ktools \
          --from-tag ${{ env.PREV_RELEASE_TAG }} \
          --to-tag ${{ env.RELEASE_TAG }} \
          --github-token ${{ secrets.AWSBUILD_GIT_TOKEN }} \
          --local-repo-path ./ \
          --output-path ./RELEASE.md

#    # --- Create release and attach bins ----- #
#

    - name: Download Linux binaies
      uses: actions/download-artifact@v3
      with:
        name: Linux_x86_64

    - name: Download Darwin binaies
      uses: actions/download-artifact@v3
      with:
        name: Darwin_x86_64
